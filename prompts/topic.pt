You are tasked with analyzing a research paper based on its title. Given only the title of the paper, please extract the following information and return it in the JSON format, your output must be only JSON:

1. **Title**: The title of the paper.
2. **Solved Problem**: A brief description of the main problem or challenge addressed by the paper. This term must be a list of phrases.
3. **Research Field**: The specific academic field in software engineering or domain the paper belongs to (e.g., software debugging, bug detection, etc.). This term must be a list of phrases.
4. **Techniques Used**: The main techniques or methodologies used in the paper (e.g., machine learning, statistical analysis, experimental design, etc.).

Format the response in the following JSON structure:

```json
{
  "title": "<Title of the paper>",
  "solved_problem": ["<Brief description of the problem addressed>", "<Brief description of the problem addressed>"],
  "research_field": ["<Field of research>", "<Field of research>"],
  "techniques_used": ["<Techniques/methodologies used>", "<Techniques/methodologies used>"]
}
```

Example input:
title: "Agentic Bug Reproduction for Effective Automated Program Repair at Google"
summary: Bug reports often lack sufficient detail for developers to reproduce
and fix the underlying defects. Bug Reproduction Tests (BRTs),
tests that fail when the bug is present and pass when it has been
resolved, are crucial for debugging, but they are rarely included in
bug reports, both in open-source and in industrial settings. Thus,
automatically generating BRTs from bug reports has the potential
to accelerate the debugging process and lower time to repair. This
paper investigates automated BRT generation within an industry
setting, specifically at Google, focusing on the challenges of a large-scale, proprietary codebase and considering real-world industry
bugs extracted from Google’s internal issue tracker. We adapt and
evaluate a state-of-the-art BRT generation technique, LIBRO, and
present our agent-based approach, BRT Agent, which makes use of
a fine-tuned Large Language Model (LLM) for code editing. Our BRT
Agent significantly outperforms LIBRO, achieving a 28% plausible
BRT generation rate, compared to 10% by LIBRO, on 80 human-reported bugs from Google’s internal issue tracker. We further
investigate the practical value of generated BRTs by integrating
them with an Automated Program Repair (APR) system at Google.
Our results show that providing BRTs to the APR system results
in 30% more bugs with plausible fixes. Additionally, we introduce
Ensemble Pass Rate (EPR), a metric which leverages the generated
BRTs to select the most promising fixes from all fixes generated by
APR system. Our evaluation on EPR for Top-K and threshold-based
fix selections demonstrates promising results and trade-offs. For
example, EPR correctly selects a plausible fix from a pool of 20
candidates in 70% of cases, based on its top-1 ranking."

Example output:
```json
{
  "title": "Agentic Bug Reproduction for Effective Automated Program Repair at Google",
  "solved_problem": ["Bug Reproduction"],
  "research_field": ["Automated Program Repair", "Bug Reproduction"],
  "techniques_used": ["Agent", "LLM"]
}
```

Please proceed to analyze the paper with the given title.

title: "{title}"
summary: "{summary}"
